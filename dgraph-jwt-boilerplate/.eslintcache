[{"/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/index.tsx":"1","/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/reportWebVitals.ts":"2","/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/App.tsx":"3","/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/controllers/apolloController.tsx":"4","/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/components/NavBar/NavBar.tsx":"5","/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/pages/Home/home.tsx":"6","/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/pages/LoginPage/Login.tsx":"7","/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/components/PrivateRoute/PrivateRoute.tsx":"8"},{"size":1240,"mtime":1611376413547,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1611109270127,"results":"11","hashOfConfig":"10"},{"size":556,"mtime":1611109270127,"results":"12","hashOfConfig":"10"},{"size":394,"mtime":1611126028387,"results":"13","hashOfConfig":"10"},{"size":4709,"mtime":1611278619351,"results":"14","hashOfConfig":"10"},{"size":790,"mtime":1611378555507,"results":"15","hashOfConfig":"10"},{"size":1088,"mtime":1611293876907,"results":"16","hashOfConfig":"10"},{"size":1124,"mtime":1611376539191,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"quxxxg",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/index.tsx",["36"],"/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/reportWebVitals.ts",[],["37","38"],"/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/App.tsx",[],"/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/controllers/apolloController.tsx",[],"/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/components/NavBar/NavBar.tsx",["39","40","41","42"],"import react, { useState } from \"react\";\nimport {Container, Grid, Typography, AppBar, Drawer, CssBaseline, Toolbar, List, Divider, IconButton,  ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\"\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, Theme, useTheme, WithStyles } from '@material-ui/core/styles';\n\n///icons\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n///end icons\n\nconst drawerWidth:number = 240;\n\nconst useStyles = makeStyles((theme:Theme) => \ncreateStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  })\n) \n\n\n\n\n\ninterface Props {\n    classes?:{}\n    children?:JSX.Element\n}\n\n\n\n\n\nconst NavBar = (props: Props): JSX.Element => { \n\n    const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n    return(\n        <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              Persistent drawer\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          {props.children}\n        </main>\n      </div>);\n }\n\n\nexport default NavBar;","/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/pages/Home/home.tsx",["43","44","45","46"],"/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/pages/LoginPage/Login.tsx",["47","48"],"/home/odet/Code/GoTODOBackEnd/dgraph-jwt-boilerplate/src/components/PrivateRoute/PrivateRoute.tsx",[],{"ruleId":"49","severity":1,"message":"50","line":11,"column":8,"nodeType":"51","messageId":"52","endLine":11,"endColumn":14},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"49","severity":1,"message":"57","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"58","line":2,"column":9,"nodeType":"51","messageId":"52","endLine":2,"endColumn":18},{"ruleId":"49","severity":1,"message":"59","line":2,"column":20,"nodeType":"51","messageId":"52","endLine":2,"endColumn":24},{"ruleId":"49","severity":1,"message":"60","line":4,"column":53,"nodeType":"51","messageId":"52","endLine":4,"endColumn":63},{"ruleId":"49","severity":1,"message":"57","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"61","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"62","line":10,"column":11,"nodeType":"51","messageId":"52","endLine":10,"endColumn":24},{"ruleId":"49","severity":1,"message":"63","line":29,"column":11,"nodeType":"51","messageId":"52","endLine":29,"endColumn":18},{"ruleId":"49","severity":1,"message":"57","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"61","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},"@typescript-eslint/no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"'react' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'WithStyles' is defined but never used.","'useState' is defined but never used.","'HomePageState' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]